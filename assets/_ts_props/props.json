{
Accordion {
	property1: 'Default'; 
},

AccordionItem {
	instance: ReactNode; 
	accordionSubtext: string; 
	accordionTitle: string; 
	property: 'Default' | 'Hover'; 
	icon: 'True' | 'False'; 
	expanded: 'True' | 'False'; 
},

AI Shortcuts Item {
	titel: string; 
	icon: boolean; 
	variant: 'Icon + Title' | 'Icon + Title hover' | 'Icon only' | 'Icon only hover'; 
},

AI Shortcuts {
	variant: 'Default' | 'Compact'; 
},

Avatar {
	initials: string; 
	size: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl' | 'xxxl'; 
	type: 'Default' | 'With line' | 'Online' | 'Offline'; 
	variant: 'Image' | 'Initial subtle' | 'Initial filled' | 'User subtle' | 'User filled'; 
},

AvatarLabeled {
	text: string; 
	subline: string; 
	sublabel: boolean; 
	size: 'sm' | 'md' | 'lg' | 'xl'; 
},

AvatarStack {
	3: boolean; 
	size: 'xs' | 'sm' | 'md' | 'lg'; 
	number: '5' | '4' | '3' | '2'; 
},

Badge {
	icon: ReactNode; 
	text: string; 
	size: 'lg' | 'md' | 'sm'; 
	type: 'Simple' | 'icon + Label' | 'Just icon' | 'Avatar'; 
	stroke: 'No' | 'Yes'; 
	cancel: 'Yes' | 'No'; 
	color: 'Gray' | 'Success' | 'Primary' | 'Warning' | 'Error' | 'Clear'; 
},

BaseBadge {
	icon: ReactNode; 
	text: string; 
	size: 'lg' | 'md' | 'sm'; 
	type: 'Simple' | 'icon + Label' | 'Just icon' | 'Avatar'; 
	cancel: 'Yes' | 'No'; 
},

Button {
	buttonLabel: string; 
	iconAfterSwap: ReactNode; 
	iconBeforeSwap: ReactNode; 
	iconAfter: boolean; 
	iconBefore: boolean; 
	size: 'sm' | 'md' | 'lg' | 'xl' | 'xxl'; 
	type: 'Primary' | 'Secondary' | 'Tertiary' | 'Link 01' | 'Link 02'; 
	state: 'Default' | 'Hover' | 'Click' | 'Focus' | 'Disabled'; 
	cornerRadius: 'Default' | 'Pill'; 
},

ButtonClose {
	size: 'xs' | 'sm' | 'md' | 'lg'; 
	color: 'Primary' | 'Gray'; 
	state: 'Default' | 'Hover' | 'Focus'; 
},

ButtonGroup {
	size: 'sm' | 'md' | 'lg'; 
	type: 'Text only' | 'Icon before' | 'Icon after' | 'Icon only' | 'Arrows'; 
},

ButtonGroupButton {
	text: string; 
	icon: ReactNode; 
	size: 'sm' | 'md' | 'lg'; 
	type: 'Icon only' | 'Text only' | 'Icon before' | 'Icon after'; 
	state: 'Default' | 'Hover' | 'Click' | 'Focus' | 'Disabled'; 
},

ButtonWithIconOnly {
	changeIcon: ReactNode; 
	size: 'sm' | 'md' | 'lg' | 'xl' | 'xxl'; 
	type: 'Primary' | 'Secondary' | 'Tertiary'; 
	state: 'Default' | 'Hover' | 'Click' | 'Focus' | 'Disabled'; 
},

CardHeader {
	actionButtons: boolean; 
	caption: boolean; 
	badge: boolean; 
	divider: boolean; 
	dropdownAction: boolean; 
	property1: 'Default'; 
},

Checkbox {
	checked: 'False' | 'True'; 
	size: 'sm' | 'md' | 'lg'; 
	state: 'Default' | 'Hover' | 'Click' | 'Focus' | 'Disabled' | 'Error'; 
	indeterminate: 'False' | 'True'; 
},

CheckboxLabel {
	label: boolean; 
	descriptionText: string; 
	labelText: string; 
	description: boolean; 
	size: 'sm' | 'md' | 'lg'; 
	state: 'Default' | 'Hover' | 'Click' | 'Focus' | 'Disabled' | 'Error'; 
	checked: 'False' | 'True'; 
	indeterminate: 'False' | 'True'; 
},

ChecklistItem {
	itemTitle: string; 
	instance: ReactNode; 
	variant: 'Only icon' | 'Circle line' | 'Circle filled' | 'Custom Icon'; 
	color: 'Primary' | 'Green' | 'Black'; 
	size: 'xs' | 'sm' | 'md' | 'lg'; 
},

Class List Item {
	divider: boolean; 
	icon: boolean; 
	subtext: string; 
	titel: string; 
	iconShape: 'Circle Icon' | 'Circle Icon hover' | 'Square Icon' | 'Square Icon hover'; 
},

ContentFrame {
	swapSlot: ReactNode; 
	contentRight: ReactNode; 
	contentCenter: ReactNode; 
	contentLeft: ReactNode; 
	contentDimm: boolean; 
	contentHeader: boolean; 
	grid: '1 Cell' | '2 Cells' | '3 Cells' | '4 Cells' | '2 Rows' | '2 Rows | 2 Cells each' | '2 Rows | 2 Cells 3 Cells' | '2 Rows | 3 Cells each' | '3 Rows'; 
},

ContentHeader {
	swapSlot2: ReactNode; 
	swapSlot: ReactNode; 
	headerGrid: '1 Cell' | '2 Cells' | '2 Rows'; 
},

ContentSlot {
	text: string; 
},

Date picker {
	month: string; 
	actions: boolean; 
	type: 'Single' | 'Single with help buttons' | 'Dual' | 'Dual with help buttons'; 
	showRange: 'False' | 'True'; 
},

Divider {
	text: string; 
	variant: 'Default' | 'Text left' | 'Text right' | 'Text middle'; 
},

Dropdown List {
	state: 'Closed' | 'Closed - Op 1' | 'Closed - Op 2' | 'Closed - Op 3' | 'Closed - Op 4' | 'Closed - Op 5' | 'Closed - Op 6' | 'Open'; 
},

Dropdown Button # Button {
	showArrow: boolean; 
	icon: ReactNode; 
	showIcon: boolean; 
	buttonText: string; 
	variant: 'Primary' | 'Secondary' | 'Tertiary'; 
	state: 'Default' | 'Hover' | 'Selected'; 
},

Dropdown Button # Item {
	icon: ReactNode; 
	itemName: string; 
	viewIcon: boolean; 
	tag: boolean; 
	state: 'Default' | 'Selected' | 'Hover'; 
},

Dropdown Button {
	state: 'Closed' | 'Opened'; 
},

EmptyState {
	secondaryButton: boolean; 
	primaryButton: boolean; 
	title: string; 
	subtext: string; 
},

EmptyStateGraphic {
	accent: boolean; 
	type: 'calendar' | 'code' | 'Category' | 'Comment' | 'Date' | 'Files' | 'Group' | 'Task' | 'Analitics' | 'Upload' | 'Dev Settings' | 'Development 01' | 'Edit' | 'Error' | 'Login' | 'Media' | 'Performance' | 'Settings' | 'Syncronize' | 'Tags' | 'Tracking' | 'Upload Error' | 'Upload Media' | 'Upload Single File' | 'Validation' | 'Web Page' | 'Write Content' | 'add Files' | 'Signature'; 
},

Featured icon {
	border: boolean; 
	icon: ReactNode; 
	size: 'sm' | 'md' | 'lg'; 
	shape: 'Square' | 'Circle'; 
	variant: 'Primary filled' | 'Primary subtle' | 'Gray subtle' | 'Primary outline' | 'Gray outline' | 'Dark filled' | 'Primary dark filled' | 'Success' | 'Error' | 'Warning' | 'Card'; 
},

GgLogo {
	size: 'sm' | 'md' | 'lg'; 
	color: 'Primary' | 'Black' | 'White'; 
	logotypeIcon: 'LOGOTYPE' | 'ICON'; 
},

GgLogoIcon {
	style: 'STROKE' | 'FILLED'; 
},

GgLogoMark {
	style: 'STROKE' | 'FILLED'; 
},

HorizontalTabs {
	variant: '01' | '02' | '03' | '04' | '05' | '06' | '07' | '08' | '09'; 
	size: 'md' | 'sm'; 
},

Image Editor / Toolbar {
	sizes: 'Small' | 'Large'; 
},

Image Editor {
	sizes: 'Small' | 'Large'; 
},

InfoCard {
	subtext: string; 
	title: string; 
	variant: 'With progress 02' | 'With icon 01' | 'With icon 02' | 'With illustration' | 'Simple 02' | 'With progress 01' | 'Simple 01'; 
},

Input {
	inputText: string; 
	hintText: string; 
	inputPlaceholder: string; 
	iconSwapBefore: ReactNode; 
	labelText: string; 
	iconSwapAfter: ReactNode; 
	iconBefore: boolean; 
	iconAfter: boolean; 
	hint: boolean; 
	label: boolean; 
	state: 'Default' | 'Hover' | 'Filled' | 'Focus' | 'Disabled' | 'Error'; 
	variant: 'Default' | 'Phone number' | 'Amount' | 'Website' | 'Card'; 
},

LoginSections {
	text: string; 
	variant: 'Simple 01' | 'Simple 02' | 'Simple 03' | 'Simple 04' | 'Simple 05' | 'With image 01' | 'With image 02' | 'With image 03' | 'With image 04' | 'With image 05' | 'With mockup 01' | 'With mockup 02' | 'With mockup 03' | 'With mockup 04' | 'With mockup 05' | 'Gradient 01' | 'Gradient 02' | 'Gradient 03' | 'Gradient 04' | 'Gradient 05'; 
	mobileLayout: 'True' | 'False'; 
},

Markdown Editor {
	sizes: 'Small' | 'Large'; 
},

Menu List Item {
	icon: ReactNode; 
	viewIcon: boolean; 
	menuItem: string; 
	size: 'sm' | 'md' | 'xl' | 'xxl'; 
	state: 'Default' | 'Hover' | 'Selected'; 
},

ModalActions {
	backButton: boolean; 
	customButton: boolean; 
	variant: 'Single Button' | '2 Buttons' | '3 Buttons | fill' | '3 Buttons | hug' | '3 Buttons | left' | '3 Buttons | right'; 
	mobile: 'True' | 'False'; 
},

ModalHeader {
	featuredIcon: boolean; 
	instance: ReactNode; 
	closeButton: boolean; 
	supportingText: boolean; 
	subtitle: string; 
	spacer: boolean; 
	titel: string; 
	variant: 'Left align 01' | 'Left align 02' | 'Center align'; 
	mobile: 'True' | 'False'; 
},

PageHeader {
	search: boolean; 
	action: boolean; 
	caption: boolean; 
	property1: 'Default'; 
},

Pagination {
	variant: '01' | '02' | '03' | '04' | '05' | '06' | '07' | '08' | '09' | '10' | '11' | '12' | '13' | '14' | '15' | '16'; 
},

PaginationButtonItem {
	icon: boolean; 
	button: 'Previous' | 'Next' | 'Number' | 'Icon only'; 
	state: 'Default' | 'Selected' | 'Focussed'; 
	color: 'Primary' | 'Gray'; 
},

PaginationDots {
	type: 'Dots' | 'Dots filled' | 'Lines' | 'Lines filled'; 
	size: 'sm' | 'md'; 
	pages: '2' | '3' | '4' | '5' | '6' | '7'; 
},

PaginationDotsItem {
	current: 'True' | 'False'; 
	type: 'Dot' | 'Line'; 
	size: 'sm' | 'md'; 
},

PaginationItem {
	changeIcon: ReactNode; 
	state: 'Default' | 'Selected' | 'Focussed'; 
	color: 'Gray' | 'Primary'; 
	shape: 'Square' | 'Circle'; 
	type: 'Number' | 'Icon'; 
},

Product Card Horizontal {
	rating: boolean; 
	tags: boolean; 
	description: boolean; 
	description: string; 
	title: string; 
	imagePadding: boolean; 
	imagePosition: 'left' | 'right'; 
},

Product Card Vertical {
	rating: boolean; 
	tags: boolean; 
	description: string; 
	description: boolean; 
	title: string; 
	imagePadding: boolean; 
},

Project Switch {
	logoIcon: ReactNode; 
	sublabel: boolean; 
	subline: string; 
	text: string; 
	size: 'sm' | 'md' | 'lg' | 'xl'; 
},

RadioButton {
	size: 'sm' | 'md'; 
	state: 'Default' | 'Hover' | 'Click' | 'Focus' | 'Disabled' | 'Error'; 
	checked: 'True' | 'False'; 
},

RadioButtonGroup {
	info1: string; 
	icon: ReactNode; 
	info2: string; 
	subtext1: string; 
	option3: string; 
	extra2: string; 
	option1: string; 
	info3: string; 
	extra1: string; 
	extra3: string; 
	option2: string; 
	subtext3: string; 
	subtext2: string; 
	text2: string; 
	text3: string; 
	text1: string; 
	variant: 'List with description' | 'List verticle' | 'List horizontal' | 'List with inline description' | 'List with radio on right' | 'Simple list with radio on right' | 'Stacked cards 01' | 'Stacked cards 02' | 'Cards'; 
	size: 'sm' | 'md'; 
},

SectionHeader {
	divider: boolean; 
	caption: boolean; 
	actionButtons: boolean; 
	actionDropdown: boolean; 
	tabs: boolean; 
	buttonGroup: boolean; 
	search: boolean; 
	property1: 'Default'; 
},

SignupSection {
	variant: 'Simple 01' | 'Simple 02' | 'Simple 03' | 'Simple 04' | 'Simple 05' | 'With image 01' | 'With image 02' | 'With image 03' | 'With image 04' | 'With image 05' | 'With mockup 01' | 'With mockup 02' | 'With mockup 03' | 'With mockup 04' | 'With mockup 05' | 'Gradient 01' | 'Gradient 02' | 'Gradient 03' | 'Gradient 04' | 'Gradient 05'; 
	mobileLayout: 'True' | 'False'; 
},

SocialButton {
	social: 'Google' | 'Facebook' | 'Apple'; 
	style: 'Filled' | 'Outline color' | 'Outline gray'; 
	state: 'Default' | 'Hover' | 'Click' | 'Focus'; 
	text: 'True' | 'False'; 
},

StoreBadges {
	store: 'Google play' | 'App store' | 'Galaxy store' | 'Microsoft' | 'App gallery' | 'F-droid'; 
	style: 'Brand' | 'White outline' | 'Black outline'; 
},

TabButton {
	icon: boolean; 
	badge: boolean; 
	size: 'sm' | 'md'; 
	variant: '01' | '02' | '03' | '04' | '05' | '06' | '07' | '08' | '09'; 
	state: 'Default' | 'Hover' | 'Active'; 
},

Table {
	header: boolean; 
	variant: '01' | '02' | '03'; 
},

Table Cell {
	title: boolean; 
	caption: boolean; 
	text: string; 
	subtext: string; 
	type: 'Text' | 'Lead avatar' | 'Lead avatar checkbox' | 'Lead avatar radio' | 'Lead checkbox' | 'Lead radio' | 'Lead toggle' | 'Action dropdown' | 'Check' | 'Checkbox only' | 'Radio only' | 'Toggle only' | 'Button group' | 'Badge' | 'Badge group' | 'Avatar only' | 'Avatar group' | 'Lead logo checkbox' | 'Lead logo radio' | 'Lead file checkbox' | 'Lead file radio'; 
},

ToggleLabel {
	subtext: string; 
	title: string; 
	description: boolean; 
	state: 'Default' | 'Hover' | 'Disabled'; 
	pressed: 'True' | 'False'; 
	togglePosition: 'Left' | 'Right'; 
},

ToggleSwitch {
	size: 'sm' | 'md'; 
	state: 'Default' | 'Hover' | 'Disabled'; 
	pressed: 'True' | 'False'; 
},

VerticalTabs {
	variant: '01' | '02' | '03' | '04' | '05' | '06' | '07'; 
	size: 'sm' | 'md'; 
},

View Mode Picker {
	mode: 'Default' | 'Advanced'; 
}
}